var Dungeon={LEVEL:1,attackVariance:5,weaponTypes:[{weaponName:"Wooden Stick",damage:4,xp:0},{weaponName:"Brass Knuckles",damage:7,xp:5},{weaponName:"Serrated Dagger",damage:12,xp:5},{weaponName:"Katana",damage:16,xp:5},{weaponName:"Reaper's scythe",damage:22,xp:5},{weaponName:"Large Trout",damage:30,xp:5}],Helper:{random:function(e,t){return Math.round(Math.random()*(t-e)+e)},min:function(e,t){return t>e?e:t},max:function(e,t){return e>t?e:t}},Point:function(e,t){this.x=e,this.y=t},Node:function(e){this.value=e,this.lchild=void 0,this.rchild=void 0},Container:function(e,t,n,i){this.x=e,this.y=t,this.width=n,this.height=i,this.center=new Dungeon.Point((n%2!==0?Math.floor(n/2):n/2-1)+e,(i%2!==0?Math.floor(i/2):i/2-1)+t)},Map:function(e,t,n,i){this.height=e,this.width=t,this.floor=i.floor,this.wall=i.wall,this.enemy=i.enemy,this.health=i.health,this.weapon=i.weapon,this.nextlvl=i.nextlvl,this.player=i.player,this.boss=i.boss,this.roomlist=n.roomlist,this.corridorlist=n.corridorlist,this.entitylist=n.entitylist,this.terrain=function(n){for(var i=[],o=0;e>o;o++){for(var r=[],h=0;t>h;h++)r.push(n);i.push(r)}return i}(this.wall)},Room:function(e){Dungeon.Helper.min(e.width,e.height)/Dungeon.Helper.max(e.width,e.height)<.45?Dungeon.Helper.max(e.width,e.height)===e.width?(this.height=Dungeon.Helper.random(.5*e.height,e.height),this.y=e.y+Dungeon.Helper.random(0,e.height-this.height),this.width=Math.ceil(this.height/.45),this.x=e.x+Math.floor(e.width/2-this.width/2)):(this.width=Dungeon.Helper.random(.5*e.width,e.width),this.x=e.x+Dungeon.Helper.random(0,e.width-this.width),this.height=Math.ceil(this.width/.45),this.y=e.y+Math.floor(e.height/2-this.height/2)):(this.width=Dungeon.Helper.random(.5*e.width,e.width-2),this.height=Dungeon.Helper.random(.5*e.height,e.height-2),this.x=e.x+Dungeon.Helper.random(1,e.width-2-this.width),this.y=e.y+Dungeon.Helper.random(1,e.height-2-this.height))},Entity:function(e,t){switch(this.x=Dungeon.Helper.random(e.x,e.x+e.width-1),this.y=Dungeon.Helper.random(e.y,e.y+e.height-1),t){case"enemy":this.type=t,this.stats={health:5+20*Dungeon.LEVEL,attack:12+5*Dungeon.LEVEL,xp:10+5*Dungeon.LEVEL};break;case"health":this.type=t,this.stats={heal:Dungeon.Helper.random(30,60)+5*Dungeon.LEVEL,xp:2+2*Dungeon.LEVEL-1};break;case"weapon":this.type=t,this.stats=Dungeon.weaponTypes[Dungeon.LEVEL];break;case"nextlvl":this.type=t,this.stats=null;break;case"player":this.type=t,this.stats={health:100,weapon:Dungeon.weaponTypes[0],xp:0,level:0,toNextLevel:60};break;default:console.error("new Entity() Invalid type name: ",t)}},Boss:function(e){this.x=Dungeon.Helper.random(e.x,e.x+e.width-2),this.y=Dungeon.Helper.random(e.y,e.y+e.height-2),this.width=2,this.height=2,this.type="boss",this.stats={health:300,attack:45,xp:200}},growTree:function(e,t){var n=new Dungeon.Node(e),i=e.split();return 0!=t&&(n.lchild=Dungeon.growTree(i[0],t-1),n.rchild=Dungeon.growTree(i[1],t-1)),n},itemPositionIsUnique:function(e,t){for(var n=0;n<e.length;n++)if(e[n].x===t.x&&e[n].y===t.y)return!1;return!0},bossPositionIsUnique:function(e,t){for(var n=0;n<e.length;n++){if(t.x===e[n].x&&t.y===e[n].y)return!1;if(t.x+t.width-1===e[n].x&&t.y===e[n].y)return!1;if(t.x===e[n].x&&t.y+t.height-1===e[n].y)return!1;if(t.x+t.width-1===e[n].x&&t.y+t.height-1===e[n].y)return!1}return!0},createEntities:function(e,t,n){for(var i=Dungeon.Helper.random(0,1),o=0;i>o;o++){do var r=new Dungeon.Entity(t,n);while(!Dungeon.itemPositionIsUnique(e,r));e.push(r)}return e},createBoss:function(e,t){do var n=new Dungeon.Boss(t);while(!Dungeon.bossPositionIsUnique(e,n));return e.push(n),e},createDungeon:function(e){if(void 0===e.entities.wall||void 0===e.entities.floor)throw new Error("Dungeon.createDungeon() entities object must at least hold 'wall' and 'floor' properties");for(var t=new Dungeon.Container(1,1,e.width-2,e.height-2),n=Dungeon.growTree(t,e.iterations).toArray(),i=n.slice(n.length/2),o=[],r=[],h=[],a=1;a<n.length;a+=2)o.push({start:n[a].center,end:n[a+1].center});for(var s=0;s<i.length;s++){var l=new Dungeon.Room(i[s]);r.push(l)}if(void 0!==e.entities.player){var u=new Dungeon.Entity(r[Dungeon.Helper.random(0,r.length-1)],"player");h.push(u)}if(void 0!==e.entities.nextlvl){var d=new Dungeon.Entity(r[0],"nextlvl");h.push(d)}if(void 0!==e.entities.weapon){var g=new Dungeon.Entity(r[r.length-1],"weapon");h.push(g)}if(void 0!==e.entities.enemy)for(var p=0;p<r.length;p++)Dungeon.createEntities(h,r[p],"enemy");if(void 0!==e.entities.health)for(var y=0;y<r.length;y++)Dungeon.createEntities(h,r[y],"health");void 0!==e.entities.boss&&Dungeon.createBoss(h,r[Dungeon.Helper.random(0,r.length-1)]);for(var w=new Dungeon.Map(e.height,e.width,{roomlist:r,corridorlist:o,entitylist:h},{wall:e.entities.wall,floor:e.entities.floor,enemy:void 0!==e.entities.enemy?e.entities.enemy:null,health:void 0!==e.entities.health?e.entities.health:null,weapon:void 0!==e.entities.weapon?e.entities.weapon:null,nextlvl:void 0!==e.entities.nextlvl?e.entities.nextlvl:null,player:void 0!==e.entities.player?e.entities.player:null,boss:void 0!==e.entities.boss?e.entities.boss:null}),f=0;f<o.length;f++)w.drawCorridor(o[f].start,o[f].end);for(var c=0;c<r.length;c++)w.drawRoom(r[c]);for(var m=0;m<h.length;m++)w.drawEntity(h[m]);return w},render:function(e,t){for(var n=document.createElement("table"),i=document.createElement("tbody"),o=0;o<e.terrain.length;o++){for(var r=document.createElement("tr"),h=0;h<e.terrain[o].length;h++){var a=document.createElement("td");e.terrain[o][h]===e.wall&&a.classList.add("wall"),e.terrain[o][h]===e.floor&&a.classList.add("floor"),e.terrain[o][h]===e.enemy&&a.classList.add("enemy"),e.terrain[o][h]===e.health&&a.classList.add("health"),e.terrain[o][h]===e.weapon&&a.classList.add("weapon"),e.terrain[o][h]===e.nextlvl&&a.classList.add("nextlvl"),e.terrain[o][h]===e.player&&a.classList.add("player"),e.terrain[o][h]===e.boss&&a.classList.add("boss"),r.appendChild(a)}i.appendChild(r)}n.appendChild(i),t.appendChild(n)}};Dungeon.Node.prototype.toArray=function(e,t){return t=void 0===t?0:t,e=void 0===e?[]:e,void 0!==this.lchild&&this.lchild.toArray(e,2*t+1),e[t]=this.value,void 0!==this.rchild&&this.rchild.toArray(e,2*t+2),e},Dungeon.Container.prototype.split=function(e){e=e||.45;var t,n;return 0===Dungeon.Helper.random(0,1)?(t=new Dungeon.Container(this.x,this.y,Dungeon.Helper.random(this.width*e,this.width*(1-e)),this.height),n=new Dungeon.Container(this.x+t.width,this.y,this.width-t.width,this.height),[t,n]):(t=new Dungeon.Container(this.x,this.y,this.width,Dungeon.Helper.random(this.height*e,this.height*(1-e))),n=new Dungeon.Container(this.x,this.y+t.height,this.width,this.height-t.height),[t,n])},Dungeon.Point.prototype.equals=function(e){if(e instanceof Dungeon.Point)return this.x===e.x&&this.y===e.y;throw new TypeError("Point.equals() argument must be a Point")},Dungeon.Point.prototype.isVerticalTo=function(e){if(e instanceof Dungeon.Point)return this.x===e.x&&this.y!==e.y;throw new TypeError("Point.equals() argument must be a Point")},Dungeon.Point.prototype.isHorizontalTo=function(e){if(e instanceof Dungeon.Point)return this.y===e.y&&this.x!==e.x;throw new TypeError("Point.equals() argument must be a Point")},Dungeon.Map.prototype.drawEntity=function(e){if(e instanceof Dungeon.Boss)for(var t=e.y;t<e.y+e.height;t++)for(var n=e.x;n<e.x+e.width;n++)this.terrain[t][n]=this[e.type];else{if(!(e instanceof Dungeon.Entity))throw new TypeError("Map.drawEntity() argument must be Entity");this.terrain[e.y][e.x]=this[e.type]}},Dungeon.Map.prototype.drawCorridor=function(e,t){if(!(e instanceof Dungeon.Point&&t instanceof Dungeon.Point))throw new TypeError("Map.drawCorridor() arguments must be from Point");if(e.isHorizontalTo(t))for(var n=e.x>t.x?e.x:t.x,i=e.x<t.x?e.x:t.x,o=i;n>=o;o++)this.terrain[e.y][o]=this.floor;else if(e.isVerticalTo(t))for(var n=e.y>t.y?e.y:t.y,i=e.y<t.y?e.y:t.y,r=i;n>=r;r++)this.terrain[r][e.x]=this.floor;else e.equals(t)&&(this.terrain[e.y][e.x]=this.floor)},Dungeon.Map.prototype.drawRoom=function(e){if(!(e instanceof Dungeon.Room))throw new TypeError("Map.drawRoom() argument must be Room");for(var t=e.y;t<e.y+e.height;t++)for(var n=e.x;n<e.x+e.width;n++)this.terrain[t][n]=this.floor};